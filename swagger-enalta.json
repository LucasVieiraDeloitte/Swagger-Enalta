{
  "openapi": "3.0.3",
  "info": {
    "title": "Middleware",
    "version": "1.0.0",
    "description": "Integración de todos los microservicios de Enalta, incluyendo la integración con Stripe."
  },
  "tags": [
    {
      "name": "Personas",
      "description": "Endpoints relacionados con la gestión de personas"
    },
    {
      "name": "Productos",
      "description": "Endpoints relacionados con la gestión de productos asociados a una persona"
    },
    {
      "name": "Pedidos",
      "description": "Endpoints relacionados con la gestión del pedido, incluyendo creación y actualización"
    },
    {
      "name": "Pagos",
      "description": "Endpoints relacionados con la gestión del pago del pedido"
    },
    {
      "name": "Bacanti",
      "description": "Integración con Bacanti"
    },
    {
      "name": "Feedbalia",
      "description": "Integración con Feedbalia"
    },
    {
      "name": "SFMC",
      "description": "Integración con SFMC (Marketing Cloud)"
    },
    {
      "name": "Stripe",
      "description": "Integración con Stripe"
    },
    {
      "name": "Domain-Personas",
      "description": "Gestión interna de personas en Domain"
    },
    {
      "name": "Domain-Productos",
      "description": "Gestión interna de productos en Domain"
    },
    {
      "name": "Domain-Pedidos",
      "description": "Gestión interna de pedidos en Domain"
    },
    {
      "name": "Domain-Pagos",
      "description": "Gestión interna de pagos en Domain"
    },
    {
      "name": "Correo",
      "description": "Envío de correos al cliente con información sobre el estado del pedido"
    }
  ],
  "paths": {
    "/personas": {
      "get": {
        "tags": [
          "Personas"
        ],
        "summary": "Obtener listado de personas",
        "description": "Obtiene un listado de personas a partir de criterios de búsqueda.",
        "parameters": [
          {
            "in": "query",
            "name": "nombre",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "apellido1",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "apellido2",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "provincia",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "localidad",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de personas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Persona"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No se encontraron personas"
          }
        }
      }
    },
    "/personas/{idPersona}": {
      "get": {
        "tags": [
          "Personas"
        ],
        "summary": "Obtener información de una persona",
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Persona encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      }
    },
    "/personas/{idPersona}/productos": {
      "get": {
        "tags": [
          "Productos"
        ],
        "summary": "Obtener productos asociados a una persona fallecida",
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos para el fallecido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogo"
                }
              }
            }
          }
        }
      }
    },
    "/pedido": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Crear un nuevo pedido en Feedbalia",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido creado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{idPedido}": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Obtener detalle de un pedido en Feedbalia",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle del pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Actualizar un pedido existente, añadiendo más productos",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido actualizado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{idPedido}/pago": {
      "post": {
        "tags": [
          "Pagos"
        ],
        "summary": "Obtener URL de pago en Stripe para un pedido",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URL de pago generada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentUrl": {
                      "type": "string",
                      "description": "URL de pago generada por Stripe."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{idPedido}/confirmacion": {
      "post": {
        "tags": [
          "Pagos"
        ],
        "summary": "Confirmar el resultado del pago de un pedido, se consulta en stripe",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK",
                      "KO"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmación procesada"
          }
        }
      }
    },
    "/correo": {
      "post": {
        "tags": [
          "Correo"
        ],
        "summary": "Envío de correo al cliente con información sobre el estado del pedido.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Correo enviado"
          }
        }
      }
    },
    "/domain/personas": {
      "get": {
        "tags": [
          "Domain-Personas"
        ],
        "summary": "Obtener listado de personas (interno)",
        "parameters": [
          {
            "in": "query",
            "name": "nombre",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "apellido1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "apellido2",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "provincia",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "localidad",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de personas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Persona"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain/personas/{idPersona}": {
      "get": {
        "tags": [
          "Domain-Personas"
        ],
        "summary": "Obtener información de una persona (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Persona encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      }
    },
    "/domain/personas/{idPersona}/productos": {
      "get": {
        "tags": [
          "Domain-Productos"
        ],
        "summary": "Obtener productos de una persona (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogo"
                }
              }
            }
          }
        }
      }
    },
    "/domain/pedido": {
      "post": {
        "tags": [
          "Domain-Pedidos"
        ],
        "summary": "Crear pedido (interno)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      }
    },
    "/domain/pedido/{idPedido}": {
      "get": {
        "tags": [
          "Domain-Pedidos"
        ],
        "summary": "Obtener detalle del pedido (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle del pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Domain-Pedidos"
        ],
        "summary": "Actualizar pedido (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          }
        }
      }
    },
    "/domain/pedido/{idPedido}/pago": {
      "post": {
        "tags": [
          "Domain-Pagos"
        ],
        "summary": "Solicitar URL de pago (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URL de pago obtenida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentUrl": {
                      "type": "string",
                      "description": "URL de pago generada por Stripe."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain/pedido/{idPedido}/confirmacion": {
      "post": {
        "tags": [
          "Domain-Pagos"
        ],
        "summary": "Confirmar pago (interno)",
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK",
                      "KO"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmación procesada"
          }
        }
      }
    },
    "/domain/correo": {
      "post": {
        "tags": [
          "Correo"
        ],
        "summary": "Envío de correo al cliente con información sobre el estado del pedido.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Correo enviado"
          }
        }
      }
    },
    "/bacanti/token": {
      "post": {
        "tags": [
          "Bacanti"
        ],
        "summary": "Obtención del token de autenticación para acceder a los servicios de Bacanti",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "grant_type"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "grant_type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token obtenido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/bacanti/api/personas": {
      "get": {
        "tags": [
          "Bacanti"
        ],
        "summary": "Obtener lista de personas desde Bacanti",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nombre",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "apellido1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "apellido2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "provincia",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "localidad",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de personas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Persona"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      }
    },
    "/bacanti/api/personas/{idPersona}": {
      "get": {
        "tags": [
          "Bacanti"
        ],
        "summary": "Obtener persona por idPersona desde Bacanti",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Persona encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Persona"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Persona no encontrada"
          }
        }
      }
    },
    "/bacanti/api/{idPersona}/productos": {
      "get": {
        "tags": [
          "Bacanti"
        ],
        "summary": "Obtener productos asociados a una persona desde Bacanti",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPersona",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Catalogo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/feedbalia/auth/token": {
      "post": {
        "tags": [
          "Feedbalia"
        ],
        "summary": "Obtener token de Feedbalia",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "grant_type"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "grant_type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token obtenido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/feedbalia/enalta/solicitud": {
      "post": {
        "tags": [
          "Feedbalia"
        ],
        "summary": "Crear una solicitud de compra en Feedbalia",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/feedbalia/enalta/solicitud/{idPedido}": {
      "get": {
        "tags": [
          "Feedbalia"
        ],
        "summary": "Obtener una solicitud de compra desde Feedbalia",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle del pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Feedbalia"
        ],
        "summary": "Actualizar una solicitud de compra en Feedbalia",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Solicitud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pedido"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/feedbalia/enalta/solicitud/{idPedido}/confirmacion": {
      "post": {
        "tags": [
          "Feedbalia"
        ],
        "summary": "Confirmar pago de una compra en Feedbalia",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idPedido",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK",
                      "KO"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmación procesada"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/sfmc/journey/{externalKey}": {
      "post": {
        "tags": [
          "SFMC"
        ],
        "summary": "Envío de correo electrónico a través de SFMC gestionado por MAPFRE",
        "parameters": [
          {
            "in": "path",
            "name": "externalKey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identificador único del journey para el envío de email. Siempre será obligatorio",
            "example": "APIEvent-4217e958-cf26-838b-8a26-39fb8f74626f"
          },
          {
            "in": "header",
            "name": "apiKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "secretKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email enviado correctamente"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/payment": {
      "post": {
        "tags": [
          "Stripe"
        ],
        "summary": "Solicitar URL de pago a Stripe",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL de pago generada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentUrl": {
                      "type": "string",
                      "description": "URL de pago generada por Stripe."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parámetros de entrada inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/webhook": {
      "post": {
        "tags": [
          "Stripe"
        ],
        "summary": "Webhook de Stripe para notificación de pago",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook procesado exitosamente"
          },
          "400": {
            "description": "Solicitud inválida"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "StripeSignature": {
        "type": "apiKey",
        "in": "header",
        "name": "Stripe-Signature",
        "description": "Firma proporcionada por Stripe para validar la autenticidad del webhook."
      }
    },
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "number"
          }
        }
      },
      "Persona": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "apellido1": {
            "type": "string"
          },
          "apellido2": {
            "type": "string"
          },
          "fechaNacimiento": {
            "type": "string",
            "format": "date-time",
            "example": "YYYY-MM-DDTHH:mm:ssZ"
          },
          "fechaFallecimiento": {
            "type": "string",
            "format": "date-time",
            "example": "YYYY-MM-DDTHH:mm:ssZ"
          },
          "velatorio": {
            "$ref": "#/components/schemas/Centro"
          },
          "ceremonia": {
            "$ref": "#/components/schemas/Centro"
          },
          "destFinal": {
            "$ref": "#/components/schemas/Centro"
          }
        }
      },
      "Centro": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "direccion": {
            "$ref": "#/components/schemas/Direccion"
          },
          "idSala": {
            "type": "string"
          },
          "fechaInicio": {
            "type": "string",
            "format": "date-time",
            "example": "YYYY-MM-DDTHH:mm:ssZ"
          },
          "fechaFin": {
            "type": "string",
            "format": "date-time",
            "example": "YYYY-MM-DDTHH:mm:ssZ"
          },
          "ecommerceInd": {
            "type": "boolean"
          }
        }
      },
      "Direccion": {
        "type": "object",
        "properties": {
          "nombreTipoCalle": {
            "type": "string"
          },
          "nombreCalle": {
            "type": "string"
          },
          "numeroCalle": {
            "type": "string"
          },
          "codigoPostal": {
            "type": "string"
          },
          "nombreCiudad": {
            "type": "string"
          },
          "nombreMunicipio": {
            "type": "string"
          },
          "latitud": {
            "type": "number"
          },
          "longitud": {
            "type": "number"
          }
        }
      },
      "Catalogo": {
        "type": "object",
        "properties": {
          "fechaSolicitud": {
            "type": "string",
            "format": "date-time",
            "example": "YYYY-MM-DDTHH:mm:ssZ"
          },
          "productos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Producto"
            }
          }
        }
      },
      "Producto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "referencia": {
            "type": "string"
          },
          "idProveedor": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "imagen": {
            "type": "string",
            "format": "byte"
          },
          "categoria": {
            "type": "string",
            "enum": [
              "ramo",
              "centro",
              "coronas"
            ]
          },
          "etiqueta": {
            "type": "string",
            "enum": [
              "natural",
              "esencial",
              "singular",
              "especial",
              "premium"
            ]
          },
          "precio": {
            "$ref": "#/components/schemas/Precio"
          }
        }
      },
      "Precio": {
        "type": "object",
        "properties": {
          "precioFinal": {
            "type": "number"
          },
          "baseImponible": {
            "type": "number"
          },
          "tipoImpuesto": {
            "type": "string",
            "enum": [
              "IVA",
              "IGIC",
              "IPSI"
            ]
          },
          "porcentajeImpuesto": {
            "type": "number"
          },
          "cuota": {
            "type": "number"
          }
        }
      },
      "Solicitud": {
        "type": "object",
        "properties": {
          "solicitante": {
            "type": "object",
            "properties": {
              "tipo": {
                "type": "string",
                "enum": [
                  "particular",
                  "empresa"
                ]
              },
              "denominacion": {
                "type": "string",
                "nullable": true
              },
              "nombre": {
                "type": "string"
              },
              "apellidos": {
                "type": "string"
              },
              "tipoDocumento": {
                "enum": [
                  "DNI",
                  "NIF",
                  "NIE"
                ]
              },
              "documento": {
                "type": "string"
              },
              "telefono": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "direccion": {
                "type": "string"
              },
              "postal": {
                "type": "string"
              },
              "ticketFactura": {
                "type": "boolean"
              },
              "aceptacionTerminosContratacion": {
                "type": "boolean"
              },
              "aceptacionPoliticasPrivacidad": {
                "type": "boolean"
              },
              "aceptacionRecibirInformacion": {
                "type": "boolean"
              }
            }
          },
          "difunto": {
            "$ref": "#/components/schemas/Persona"
          },
          "encargos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Encargo"
            }
          }
        }
      },
      "Encargo": {
        "type": "object",
        "properties": {
          "producto": {
            "$ref": "#/components/schemas/Producto"
          },
          "tipoDeMensaje": {
            "type": "string",
            "enum": [
              "tarjeta",
              "cinta"
            ]
          },
          "mensaje": {
            "type": "string"
          },
          "firma": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Pedido": {
        "type": "object",
        "properties": {
          "solicitud": {
            "$ref": "#/components/schemas/Solicitud"
          },
          "estado": {
            "type": "string",
            "enum": [
              "Pendiente",
              "Pagado"
            ]
          },
          "importeTotal": {
            "$ref": "#/components/schemas/Precio"
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Correo electrónico destinatario. Contacto (callcenterenalta@centroespecialtutelar.es), Trabaja (recursoshumanos@enalta.es) y Presupuesto (callcenterenalta@centroespecialtutelar.es)",
            "type": "string",
            "enum": [
              "correo@correo.es",
              "correo@correo.es",
              "correo@correo.es"
            ]
          },
          "name": {
            "type": "string",
            "description": "Nombre del cliente. Se informa en todos los tipos de email."
          },
          "surname": {
            "type": "string",
            "description": "Apellido del cliente. Se informa en todos los tipos de email."
          },
          "document_type": {
            "type": "string",
            "description": "Tipo de documento del cliente. No se utiliza."
          },
          "document_number": {
            "type": "string",
            "description": "Número de documento del cliente. No se utiliza."
          },
          "id_client": {
            "type": "boolean",
            "description": "Indicador de si el cliente es cliente. No se utiliza."
          },
          "phone": {
            "type": "string",
            "description": "Número de teléfono del cliente. No se utiliza."
          },
          "origin": {
            "type": "string",
            "description": "Origen de la petición, siempre toma el mismo valor *Enalta*",
            "example": "Enalta"
          },
          "business": {
            "type": "string",
            "description": "Origen de la petición, siempre toma el mismo valor *Digital*",
            "example": "Digital"
          },
          "channel": {
            "type": "string",
            "description": "No se utiliza."
          },
          "ric_id": {
            "type": "string",
            "description": "No se utiliza."
          },
          "url": {
            "type": "string",
            "description": "No se utiliza."
          },
          "auxiliary_1": {
            "type": "string",
            "description": "Tipo de email a enviar por el cual el journery hace la diferencia",
            "enum": [
              "Trabaja",
              "Solicita",
              "Contacta"
            ]
          },
          "auxiliary_2": {
            "type": "string",
            "description": "Email del cliente."
          },
          "auxiliary_3": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (Telefono cliente), Trabaja (Presentacion) y Presupuesto (Codigo postal)"
          },
          "auxiliary_4": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (Mensaje del cliente), Trabaja (CV???) y Presupuesto (Servicio)"
          },
          "auxiliary_5": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (Aceptación de políticas), Trabaja (Vacante) y Presupuesto (Paquete)"
          },
          "auxiliary_6": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (N/A), Trabaja (N/A) y Presupuesto (Información)"
          },
          "auxiliary_7": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (N/A), Trabaja (N/A) y Presupuesto (Aceptación políticas)"
          },
          "auxiliary_8": {
            "type": "string",
            "description": "Dependiendo del tipo de email, es una información u otra la que hay que enviar. Contacto (N/A), Trabaja (N/A) y Presupuesto (Teléfono del cliente)"
          }
        }
      },
      "PaymentLineItem": {
        "type": "object",
        "required": [
          "productId",
          "productName",
          "price",
          "quantity"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Identificador interno del producto."
          },
          "productName": {
            "type": "string",
            "description": "Nombre del producto."
          },
          "price": {
            "type": "integer",
            "description": "Precio unitario del producto en céntimos."
          },
          "quantity": {
            "type": "integer",
            "description": "Cantidad solicitada."
          }
        }
      },
      "StripePaymentRequest": {
        "type": "object",
        "required": [
          "total",
          "lineItems"
        ],
        "properties": {
          "total": {
            "type": "number",
            "description": "Importe total del pedido a cobrar."
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentLineItem"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "ER001"
          },
          "description": {
            "type": "string",
            "description": "Descripción del error"
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Descripción del error ocurrido."
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "StripeSignature": []
    }
  ],
  "externalDocs": {
    "description": "Documentación oficial de Stripe",
    "url": "https://stripe.com/docs/api"
  }
}
